<?php

/**
 * BaseDmBehavior
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $dm_behavior_key
 * @property boolean $dm_behavior_enabled
 * @property enum $dm_behavior_attached_to
 * @property string $dm_behavior_attached_to_selector
 * @property string $dm_behavior_value
 * @property integer $dm_page_id
 * @property integer $dm_area_id
 * @property integer $dm_zone_id
 * @property integer $dm_widget_id
 * @property DmPage $Page
 * @property DmArea $Area
 * @property DmZone $Zone
 * @property DmWidget $Widget
 * 
 * @method string     getDmBehaviorKey()                    Returns the current record's "dm_behavior_key" value
 * @method boolean    getDmBehaviorEnabled()                Returns the current record's "dm_behavior_enabled" value
 * @method enum       getDmBehaviorAttachedTo()             Returns the current record's "dm_behavior_attached_to" value
 * @method string     getDmBehaviorAttachedToSelector()     Returns the current record's "dm_behavior_attached_to_selector" value
 * @method string     getDmBehaviorValue()                  Returns the current record's "dm_behavior_value" value
 * @method integer    getDmPageId()                         Returns the current record's "dm_page_id" value
 * @method integer    getDmAreaId()                         Returns the current record's "dm_area_id" value
 * @method integer    getDmZoneId()                         Returns the current record's "dm_zone_id" value
 * @method integer    getDmWidgetId()                       Returns the current record's "dm_widget_id" value
 * @method DmPage     getPage()                             Returns the current record's "Page" value
 * @method DmArea     getArea()                             Returns the current record's "Area" value
 * @method DmZone     getZone()                             Returns the current record's "Zone" value
 * @method DmWidget   getWidget()                           Returns the current record's "Widget" value
 * @method DmBehavior setDmBehaviorKey()                    Sets the current record's "dm_behavior_key" value
 * @method DmBehavior setDmBehaviorEnabled()                Sets the current record's "dm_behavior_enabled" value
 * @method DmBehavior setDmBehaviorAttachedTo()             Sets the current record's "dm_behavior_attached_to" value
 * @method DmBehavior setDmBehaviorAttachedToSelector()     Sets the current record's "dm_behavior_attached_to_selector" value
 * @method DmBehavior setDmBehaviorValue()                  Sets the current record's "dm_behavior_value" value
 * @method DmBehavior setDmPageId()                         Sets the current record's "dm_page_id" value
 * @method DmBehavior setDmAreaId()                         Sets the current record's "dm_area_id" value
 * @method DmBehavior setDmZoneId()                         Sets the current record's "dm_zone_id" value
 * @method DmBehavior setDmWidgetId()                       Sets the current record's "dm_widget_id" value
 * @method DmBehavior setPage()                             Sets the current record's "Page" value
 * @method DmBehavior setArea()                             Sets the current record's "Area" value
 * @method DmBehavior setZone()                             Sets the current record's "Zone" value
 * @method DmBehavior setWidget()                           Sets the current record's "Widget" value
 * 
 * @package    viveSmart
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDmBehavior extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dm_behavior');
        $this->hasColumn('dm_behavior_key', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('dm_behavior_enabled', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('dm_behavior_attached_to', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'page',
              1 => 'area',
              2 => 'zone',
              3 => 'widget',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('dm_behavior_attached_to_selector', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('dm_behavior_value', 'string', 60000, array(
             'type' => 'string',
             'length' => 60000,
             ));
        $this->hasColumn('dm_page_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('dm_area_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('dm_zone_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('dm_widget_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DmPage as Page', array(
             'local' => 'dm_page_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('DmArea as Area', array(
             'local' => 'dm_area_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('DmZone as Zone', array(
             'local' => 'dm_zone_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('DmWidget as Widget', array(
             'local' => 'dm_widget_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $sortable0 = new Doctrine_Template_Sortable(array(
             ));
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'disabled' => true,
             ),
             ));
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'dm_behavior_value',
              1 => 'dm_behavior_enabled',
             ),
             'length' => 7,
             ));
        $this->actAs($sortable0);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}